image: docker

services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

build-docker:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "$CI_PROJECT_PATH" | awk -F"/" '{print $2}'
    - docker build -t $CONTAINER_TEST_IMAGE . --build-arg CI_PROJECT_NAME=$CI_PROJECT_PATH
    - docker push $CONTAINER_TEST_IMAGE
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_LOGIN/apizaplog:latest
    - docker push $DOCKER_HUB_LOGIN/apizaplog:latest
  only:
    - master

deploy-to-zaplog-dev:
  environment:
    name: '$ENVIRONMENT_NAME_ZAPLOG_DEV'
    url: '$ENVIRONMENT_URL_ZAPLOG_DEV'
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SSH_USER@$SSH_HOST "cd $APP_FOLDER && docker-compose pull && docker-compose up -d"
  only:
    - master

deploy-to-mindmeld-prod:
  environment:
    name: '$ENVIRONMENT_NAME_MINDMELD_PROD'
    url: '$ENVIRONMENT_URL_MINDMELD_PROD'
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SSH_USER@$SSH_HOST "cd $APP_FOLDER && docker-compose pull && docker-compose up -d"
  only:
    - master

deploy-to-zaplog-prod:
  environment:
    name: '$ENVIRONMENT_NAME_ZAPLOG_PROD'
    url: '$ENVIRONMENT_URL_ZAPLOG_PROD'
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SSH_USER@$SSH_HOST "cd $APP_FOLDER && docker-compose pull && docker-compose up -d"
  only:
    - master
  when: manual
